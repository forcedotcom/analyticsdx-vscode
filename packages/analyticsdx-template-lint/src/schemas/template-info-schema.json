{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://schemas.salesforce.com/analytics/template-info.json",
  "title": "Salesforce Analytics Template Info",
  "description": "",
  "type": "object",
  "additionalProperties": false,
  "$comment": "vscode supports some extra fields (e.g. allowComments, enumDescriptions, deprecationMessage, patternErrorMessage, defaultSnippets), see https://github.com/microsoft/vscode/blob/main/src/vs/base/common/jsonSchema.ts",
  "allowComments": true,
  "if": {
    "properties": {
      "templateType": {
        "const": "dashboard"
      }
    },
    "required": ["templateType"]
  },
  "then": {
    "$comment": "dashboard templates need these",
    "required": ["name", "label", "assetVersion", "dashboards"]
  },
  "else": {
    "if": {
      "properties": {
        "templateType": {
          "const": "lens"
        }
      },
      "required": ["templateType"]
    },
    "then": {
      "$comment": "lens templates need these",
      "required": ["name", "label", "assetVersion", "lenses"]
    },
    "else": {
      "$comment": "app and data templates need these",
      "required": ["name", "label", "assetVersion", "releaseInfo"]
    }
  },
  "properties": {
    "templateType": {
      "description": "The type of asset the template creates. Defaults to 'app'.",
      "default": "app",
      "oneOf": [
        {
          "type": "string",
          "enum": ["app", "dashboard", "data", "embeddedapp"],
          "enumDescriptions": [
            "Specify that the template creates an app.",
            "Specify that the template creates a dashboard.",
            "Specify that the template creates a data app.",
            "Specify that the template creates an embedded app."
          ]
        },
        {
          "type": "string",
          "$comment": "These are also valid in the server, but we shouldn't prompt users for them. Also, json-schema doesn't support sending in a case-sensitive flag nor doing a (?i) group.",
          "pattern": "^(lens|Lens|TemporaryApp|temporaryApp|temporaryapp)$"
        },
        {
          "type": "null"
        }
      ]
    },
    "name": {
      "type": "string",
      "description": "The unique developer name for the template. If changed, creates a new template. If changed to an existing template developer name, overwrites the template with that name.",
      "maxLength": 80,
      "pattern": "^(?!.*__)(?!.*_$)[A-Za-z][A-Za-z0-9_]*$",
      "patternErrorMessage": "Value should start with an ascii letter, followed by letters, numbers, or underscores. Cannot contain consecutive underscores or end in underscore."
    },
    "namespace": {
      "type": ["null", "string"],
      "doNotSuggest": true,
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "label": {
      "type": "string",
      "description": "The template name visible to users.",
      "maxLength": 80
    },
    "description": {
      "type": ["null", "string"],
      "description": "Describes the asset users create from the template.",
      "maxLength": 255,
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "assetIcon": {
      "type": ["null", "string"],
      "deprecationMessage": "Deprecated. Use 'icons.appBadge' instead.",
      "description": "(Deprecated. Use 'icons.appBadge' instead.) Sets the app icon at creation. Analytics stores twenty app icon .png files numbered 1-20. Defaults to 'icon 1.png'.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "templateIcon": {
      "type": ["null", "string"],
      "default": "default.png",
      "deprecationMessage": "Deprecated. Use 'icons.templateBadge' instead.",
      "description": "(Deprecated. Use icons.templateBadge instead.) Sets the template icon to display in the UI. If not specified, system uses default icon for the template (default.png). Default.png is the only icon developers can use.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "icons": {
      "type": ["null", "object"],
      "description": "Specifies the icons to display in the UI for the template.",
      "examples": [{}],
      "additionalProperties": false,
      "properties": {
        "appBadge": {
          "$ref": "#/definitions/icon",
          "description": "The icon representing the dashboard or app after it's created."
        },
        "templateBadge": {
          "$ref": "#/definitions/icon",
          "description": "The template icon displayed in the template picker during app creation."
        },
        "templateDetail": {
          "$ref": "#/definitions/icon",
          "deprecationMessage": "Deprecated. No longer used."
        },
        "templatePreviews": {
          "type": ["null", "array"],
          "minItems": 0,
          "examples": [[]],
          "description": "Template preview icons displayed in the template details window during app creation.",
          "items": {
            "$ref": "#/definitions/previewIcon",
            "description": "Template preview icon."
          }
        }
      }
    },
    "assetVersion": {
      "type": "number",
      "default": 52.0,
      "minimum": 39.0,
      "$comment": "multipleOf 1.0 will basically check that it's a whole number or ends in .0, to match what's currently supported",
      "multipleOf": 1.0,
      "description": "The API version Analytics uses to process all app assets."
    },
    "releaseInfo": {
      "type": "object",
      "description": "Release information for the template.",
      "additionalProperties": false,
      "required": ["templateVersion"],
      "properties": {
        "templateVersion": {
          "type": "string",
          "description": "The template version, tracked for the upgrade process. A wave/templates PUT call automatically increments the number. Can also be changed manually. Format: ##.## as a string.",
          "pattern": "^[0-9]+\\.[0-9]+$"
        },
        "notesFile": {
          "type": ["null", "string"],
          "description": "HTML file that describes a new template version. Supports basic HTML formatting, but not links or javascript. Defaults to template description if file is not specified.",
          "defaultSnippets": [
            {
              "label": "\"\"",
              "body": "${0}"
            }
          ]
        }
      },
      "defaultSnippets": [
        {
          "label": "New releaseInfo",
          "body": {
            "templateVersion": "${1:1.0}",
            "notesFile": "${2:releaseNotes.html}"
          }
        }
      ]
    },
    "rules": {
      "type": ["null", "array"],
      "description": "Defines rules files for converting apps to and from the template. Loaded first to last. Order matters for dependencies.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["type", "file"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["templateToApp", "appToTemplate"],
            "enumDescriptions": [
              "Rules to apply when creating a new app from a template.",
              "Rules to apply when updating the template from the source app."
            ],
            "default": "templateToApp",
            "description": "The type of the rules file."
          },
          "file": {
            "type": "string",
            "description": "Path to the rules file."
          }
        },
        "defaultSnippets": [
          {
            "label": "New rule",
            "body": {
              "type": "${1|templateToApp,appToTemplate|}",
              "file": "${2:filename}-rules.json"
            }
          }
        ]
      },
      "defaultSnippets": [
        {
          "label": "New rules",
          "body": [
            {
              "type": "appToTemplate",
              "file": "${1:app-to-template-rules.json}"
            },
            {
              "type": "templateToApp",
              "file": "${2:template-to-app-rules.json}"
            }
          ]
        }
      ]
    },
    "ruleDefinition": {
      "type": ["null", "string"],
      "deprecationMessage": "Deprecated. Use a templateToApp rule instead.",
      "description": "(Deprecated. Use a templateToApp rule instead.) Define a single templateToApp rules file for the template.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "uiDefinition": {
      "type": ["null", "string"],
      "description": "Path to the UI information file.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "layoutDefinition": {
      "type": ["null", "string"],
      "description": "Path to the UI layout information file. This is currently only supported for `data` templates.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ],
      "$comment": "This feature is not fully GA for public consumption, so hide it from code-completion for now",
      "doNotSuggest": true
    },
    "variableDefinition": {
      "type": ["null", "string"],
      "description": "Path to the variables definition file.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "folderDefinition": {
      "type": ["null", "string"],
      "description": "Path to the folder definition file.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "autoInstallDefinition": {
      "type": ["null", "string"],
      "description": "Path to the auto install configuration file. Only available for app and embeddedapp template types. Available in Winter '21 release.",
      "defaultSnippets": [
        {
          "label": "\"\"",
          "body": "${0}"
        }
      ]
    },
    "apexCallback": {
      "type": "object",
      "description": "Registers an Apex class that runs on wizard load, app create, and app upgrade. The Apex class examines the org and sets variable values.",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "namespace": {
          "type": "string",
          "description": "The org's SFDC namespace."
        },
        "name": {
          "type": "string",
          "description": "The name of the Apex class to use."
        }
      },
      "$comment": "TODO: dynamically get the available classes from either the metadata or org browser",
      "defaultSnippets": [
        {
          "label": "New apexCallback",
          "body": {
            "name": "${1:name}"
          }
        }
      ]
    },
    "dashboards": {
      "type": ["null", "array"],
      "description": "List of dashboards to include in the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["file", "label"],
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the dashboard json file."
          },
          "label": {
            "type": "string",
            "description": "The dashboard label. Must match the 'label' attribute in the dashboard file."
          },
          "name": {
            "type": "string",
            "description": "The dashboard name. Must match the 'name' attribute in the dashboard file."
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the dashboard is created in the app. If not met, the dashboard is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          }
        },
        "defaultSnippets": [
          {
            "label": "New dashboard",
            "body": {
              "file": "dashboards/${1:name}.json",
              "label": "${1}",
              "name": "${1}"
            }
          }
        ]
      }
    },
    "components": {
      "type": ["null", "array"],
      "description": "List of dashboard components to include in the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["file", "label"],
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the dashboard component json file."
          },
          "label": {
            "type": "string",
            "description": "The dashboard component label. Must match the 'label' attribute in the dashboard component file."
          },
          "name": {
            "type": "string",
            "description": "The dashboard component name. Must match the 'name' attribute in the dashboard component file."
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the dashboard component is created in the app. If not met, the dashboard component is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          }
        },
        "defaultSnippets": [
          {
            "label": "New dashboard component",
            "body": {
              "file": "components/${1:name}.json",
              "label": "${1}",
              "name": "${1}"
            }
          }
        ]
      }
    },
    "lenses": {
      "type": ["null", "array"],
      "description": "List of lenses to include in the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["file", "label"],
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the lens json file."
          },
          "label": {
            "type": "string",
            "description": "The lens label. Must match the 'label' attribute in the lens file."
          },
          "name": {
            "type": "string",
            "description": "The lens name. Must match the 'name' attribute in the lens file."
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the lens is created in the app. If not met, the lens is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          }
        },
        "defaultSnippets": [
          {
            "label": "New lens",
            "body": {
              "file": "lenses/${1:name}.json",
              "label": "${1}",
              "name": "${1}"
            }
          }
        ]
      }
    },
    "eltDataflows": {
      "type": ["null", "array"],
      "description": "List of dataflows to include in the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["file", "name", "label"],
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the dataflow json file."
          },
          "label": {
            "type": "string",
            "description": "The dataflow label. Must match the 'MasterLabel' attribute in the dataflow file."
          },
          "name": {
            "type": "string",
            "description": "The dataflow name. Must match the 'name' attribute in the dataflow file."
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the dataflow is created in the app. If not, the dataflow is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          }
        },
        "defaultSnippets": [
          {
            "label": "New dataflow",
            "body": {
              "file": "dataflows/${1:name}.json",
              "label": "${1}",
              "name": "${1}"
            }
          }
        ]
      }
    },
    "recipes": {
      "type": ["null", "array"],
      "description": "List of recipes to include in the template.",
      "$comment": "For now, allow this to be specified, but do not offer it in code-completions until the feature is ready",
      "doNotSuggest": true,
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["file", "label"],
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the recipe json file."
          },
          "label": {
            "type": "string",
            "description": "The recipe label. Must match the 'label' attribute in the recipe file."
          },
          "name": {
            "type": "string",
            "description": "The recipe name. Must match the 'name' attribute in the recipe file."
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the recipe is created in the app. If not, the recipe is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          }
        },
        "defaultSnippets": [
          {
            "label": "New recipe",
            "body": {
              "file": "recipes/${1:name}.json",
              "label": "${1}",
              "name": "${1}"
            }
          }
        ]
      }
    },
    "externalFiles": {
      "type": ["null", "array"],
      "description": "List of external CSV files used in the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "type"],
        "properties": {
          "file": {
            "type": ["null", "string"],
            "description": "Path to the file.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "The type of data in the external file. Only supports 'CSV'.",
            "enum": ["CSV"],
            "default": "CSV"
          },
          "name": {
            "type": "string",
            "description": "The externalFile name. Must match the 'name' attribute in the schema file."
          },
          "schema": {
            "type": ["null", "string"],
            "description": "Path to the schema file, which describes data format.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          },
          "userXmd": {
            "type": ["null", "string"],
            "description": "Path to the XMD file, which describes data display format.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the external file is created in the app. If not, the external file is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "rows": {
            "type": ["null", "number"],
            "default": 5,
            "minimum": 1,
            "maximum": 1000,
            "description": "Number of rows in the files to read (1-1000)."
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          },
          "label": {
            "type": ["null", "string"],
            "$comment": "Technnically supported but not used in runtime",
            "doNotSuggest": true,
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          }
        },
        "defaultSnippets": [
          {
            "label": "New externalFile",
            "body": {
              "name": "${1:name}",
              "file": "external_files/${1}.csv",
              "type": "CSV",
              "schema": "external_files/${1}.json",
              "userXmd": "external_files/${1}_Xmd.json"
            }
          }
        ]
      }
    },
    "datasetFiles": {
      "type": ["null", "array"],
      "description": "List of datasets to be used in the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["label", "name"],
        "properties": {
          "label": {
            "type": "string",
            "description": "The dataset label."
          },
          "name": {
            "type": "string",
            "description": "The dataset name."
          },
          "userXmd": {
            "type": ["null", "string"],
            "description": "Path to the XMD file for the dataset.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the dataset is created in the app. If not met, the dataset is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          },
          "file": {
            "type": ["null", "string"],
            "$comment": "Technnically supported but not used in runtime",
            "doNotSuggest": true,
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          },
          "liveConnection": {
            "type": "object",
            "description": "The connection information for this live dataset",
            "additionalProperties": false,
            "$comment": "For now, allow this to be specified, but do not offer it in code-completions until the feature is ready",
            "doNotSuggest": true,
            "required": ["connectionName", "sourceObjectName"],
            "properties": {
              "connectionName": {
                "type": "string",
                "description": "The devname of the live connection (choose something unique to avoid collisions)"
              },
              "sourceObjectName": {
                "type": "string",
                "description": "The source object name"
              }
            },
            "defaultSnippets": [
              {
                "label": "New liveConnection",
                "body": {
                  "connectionName": "${1:someuniqueliveconnectionname}",
                  "sourceObjectName": "${2}"
                }
              }
            ]
          }
        },
        "defaultSnippets": [
          {
            "label": "New dataset",
            "body": {
              "label": "${1}",
              "name": "${1:name}",
              "userXmd": "datasets/${1}_Xmd.json"
            }
          }
        ]
      }
    },
    "imageFiles": {
      "type": ["null", "array"],
      "description": "List of app images used in the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name", "file"],
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the image file."
          },
          "name": {
            "type": "string",
            "description": "The image name."
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the image is created in the app. If not, the image is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          },
          "label": {
            "type": ["null", "string"],
            "$comment": "Technnically supported but not used in runtime",
            "doNotSuggest": true,
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          }
        },
        "defaultSnippets": [
          {
            "label": "New imageFile",
            "body": {
              "file": "images/${1:name}.${2|png,jpg,gif,svg|}",
              "name": "${1}"
            }
          }
        ]
      }
    },
    "storedQueries": {
      "type": ["null", "array"],
      "description": "List of stored queries to use in the template.",
      "minItems": 0,
      "examples": [[]],
      "doNotSuggest": true,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["file", "label"],
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the stored query json file."
          },
          "label": {
            "type": "string",
            "description": "The stored query label."
          },
          "name": {
            "type": "string",
            "description": "The stored query name."
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the stored query is created in the app. If not, the stored query is not created.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          },
          "overwriteOnUpgrade": {
            "$ref": "#/definitions/overwriteOnUpgrade"
          }
        },
        "defaultSnippets": [
          {
            "label": "New storedQuery",
            "body": {
              "file": "queries/${1:name}.json",
              "label": "${1}",
              "name": "${1}"
            }
          }
        ]
      }
    },
    "extendedTypes": {
      "type": ["null", "object"],
      "description": "",
      "examples": [{}],
      "additionalProperties": false,
      "properties": {
        "discoveryStories": {
          "type": "array",
          "description": "List of discovery stories to use in the template.",
          "minItems": 0,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["file", "label"],
            "properties": {
              "file": {
                "type": "string",
                "description": "Path to the discovery story file."
              },
              "label": {
                "type": "string",
                "description": "The discovery story label."
              },
              "name": {
                "type": "string",
                "description": "The discovery story name."
              },
              "condition": {
                "type": ["null", "string"],
                "description": "If met, the discovery story is created in the app. If not, the discovery story is not created.",
                "defaultSnippets": [
                  {
                    "label": "\"\"",
                    "body": "${0}"
                  },
                  {
                    "label": "${...} expression",
                    "body": "${Variables.${1:varname}}"
                  }
                ]
              },
              "overwriteOnUpgrade": {
                "$ref": "#/definitions/overwriteOnUpgrade"
              }
            },
            "defaultSnippets": [
              {
                "label": "New discoveryStory",
                "body": {
                  "file": "${1:name}.json",
                  "label": "${1}",
                  "name": "${1}"
                }
              }
            ]
          }
        },
        "predictiveScoring": {
          "type": "array",
          "description": "List of prediction definitions to use in the template.",
          "minItems": 0,
          "$comment": "Allow to be specified, but don't include in code completions until fully released.",
          "doNotSuggest": true,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["file", "label"],
            "properties": {
              "file": {
                "type": "string",
                "description": "Path to the prediction definition file."
              },
              "label": {
                "type": "string",
                "description": "The prediction definition label."
              },
              "name": {
                "type": "string",
                "description": "The prediction definition name."
              },
              "condition": {
                "type": ["null", "string"],
                "description": "If met, the prediction is created and run in the app. If not, the prediction is not created.",
                "defaultSnippets": [
                  {
                    "label": "\"\"",
                    "body": "${0}"
                  },
                  {
                    "label": "${...} expression",
                    "body": "${Variables.${1:varname}}"
                  }
                ]
              },
              "overwriteOnUpgrade": {
                "$ref": "#/definitions/overwriteOnUpgrade"
              }
            },
            "defaultSnippets": [
              {
                "label": "New predictiveScoring",
                "body": {
                  "file": "${1:name}.json",
                  "label": "${1}",
                  "name": "${1}"
                }
              }
            ]
          }
        }
      }
    },
    "customAttributes": {
      "type": ["null", "array"],
      "description": "Define custom metadata attributes for the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "description": "Custom metadata attribute for the template.",
        "required": ["label"],
        "properties": {
          "label": {
            "description": "Custom attribute display label.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "enum": ["Features", "Salesforce Objects", "Publisher", "Industry"],
                "enumDescriptions": [
                  "List of template features.",
                  "List of Salesforce objects the template uses.",
                  "Publisher(s) of the template.",
                  "Industries this template is for."
                ]
              }
            ]
          },
          "values": {
            "type": ["null", "array"],
            "examples": [[]],
            "items": {
              "type": "string"
            }
          }
        },
        "defaultSnippets": [
          {
            "label": "New customAttribute",
            "body": {
              "label": "${1:label}",
              "values": ["${2:value}"]
            }
          }
        ]
      }
    },
    "videos": {
      "type": ["null", "array"],
      "description": "Associate videos with the template.",
      "minItems": 0,
      "examples": [[]],
      "doNotSuggest": true,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["purpose", "id", "linkType", "label"],
        "properties": {
          "purpose": {
            "type": "string",
            "enum": ["walkthrough", "onboarding"],
            "default": "onboarding",
            "description": "The purpose of the video."
          },
          "id": {
            "type": "string",
            "description": "ID of the video in the video provider specified in linkType."
          },
          "linkType": {
            "description": "The video provider.",
            "type": "string",
            "enum": ["youtube", "vidyard"],
            "enumDescriptions": ["Youtube.com is the video provider.", "vidyard.com is the video provider"]
          },
          "label": {
            "type": "string",
            "description": "Display label for the video in the UI."
          },
          "showPlaylist": {
            "type": "boolean",
            "description": "Set to true to include playlist in the video UI.",
            "default": false
          }
        }
      }
    },
    "tags": {
      "type": ["null", "array"],
      "description": "Keywords to tag for the template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "string"
      },
      "defaultSnippets": [
        {
          "label": "New tags",
          "body": ["${1:tag}"]
        }
      ]
    },
    "templateDependencies": {
      "type": ["null", "array"],
      "description": "Templates that this template depends upon. For each, an app needs to exist that was created from the dependent template.",
      "minItems": 0,
      "examples": [[]],
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["name"],
        "properties": {
          "namespace": {
            "type": ["null", "string"],
            "description": "The dependent template namespace.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "The dependent template name."
          },
          "templateVersion": {
            "type": ["null", "string"],
            "description": "The version matcher of the dependent template this template requires. Optionally use =, >, >=, <, and <= at beginning.",
            "pattern": "^(=|>|>=|<|<=)?[0-9]+(\\.[0-9]+)?$",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              }
            ]
          },
          "condition": {
            "type": ["null", "string"],
            "description": "If met, the template dependency is required and available in expressions.",
            "defaultSnippets": [
              {
                "label": "\"\"",
                "body": "${0}"
              },
              {
                "label": "${...} expression",
                "body": "${Variables.${1:varname}}"
              }
            ]
          }
        },
        "defaultSnippets": [
          {
            "label": "New templateDependency",
            "body": {
              "name": "${1:name}",
              "templateVersion": "${2|>=,>,=,<,<=|}${3:1.0}"
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "icon": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "namespace": {
          "type": ["null", "string"],
          "description": "The icon namespace.",
          "defaultSnippets": [
            {
              "label": "\"\"",
              "body": "${0}"
            }
          ]
        },
        "name": {
          "type": "string",
          "description": "The icon name."
        }
      },
      "defaultSnippets": [
        {
          "label": "New icon",
          "body": {
            "name": "${1:name}"
          }
        }
      ]
    },
    "previewIcon": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name", "label"],
      "properties": {
        "namespace": {
          "type": ["null", "string"],
          "description": "The icon namespace.",
          "defaultSnippets": [
            {
              "label": "\"\"",
              "body": "${0}"
            }
          ]
        },
        "name": {
          "type": "string",
          "description": "The icon name."
        },
        "label": {
          "type": "string",
          "description": "The display label of the template preview."
        },
        "description": {
          "type": ["null", "string"],
          "description": "The description of the template preview.",
          "defaultSnippets": [
            {
              "label": "\"\"",
              "body": "${0}"
            }
          ]
        }
      },
      "defaultSnippets": [
        {
          "label": "New icon",
          "body": {
            "label": "${1:label}",
            "name": "${1}",
            "description": "${2}"
          }
        }
      ]
    },
    "elExpression": {
      "type": "string",
      "pattern": "^\\$\\{.*\\}$"
    },
    "overwriteOnUpgrade": {
      "description": "Controls how to handle the object when the template is upgraded.",
      "oneOf": [
        {
          "$ref": "#/definitions/elExpression",
          "patternErrorMessage": "Value must be either a valid ${...} expression, or one of 'Always', 'IfDifferent', or 'Never'",
          "defaultSnippets": [
            {
              "label": "${...} expression",
              "body": "${Variables.${1:varname}}"
            }
          ]
        },
        {
          "type": "string",
          "default": "IfDifferent",
          "enum": ["Always", "IfDifferent", "Never"],
          "enumDescriptions": [
            "Always overwrite this object on upgrade.",
            "Overwrite this object on upgrade if it differs from the template version.",
            "Never overwrite this object on upgrade."
          ]
        },
        {
          "type": "null"
        }
      ]
    }
  }
}
