{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://schemas.salesforce.com/analytics/templates/variables.json",
  "title": "Salesforce Analytics Template Variables Definition",
  "description": "",
  "type": "object",
  "allowComments": true,
  "additionalProperties": false,
  "patternProperties": {
    "^[a-zA-Z_][a-zA-Z0-9_]*$": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for the variable displayed in the wizard."
        },
        "description": {
          "type": "string",
          "description": "Text displayed under the label with more information."
        },
        "required": {
          "type": "boolean",
          "description": "Specifies if selecting a variable value is required. Defaults to false.",
          "default": false
        },
        "excludeSelected": {
          "type": "boolean",
          "description": "For a picker like SobjectType or SobjectFieldType, removes values already selected by user from the picker. Defaults to false.",
          "default": false
        },
        "excludes": {
          "type": "array",
          "description": "Define values to exclude from selections in response to wizard questions. The values can be string literals and/or string regular expressions of the form \"/<pattern>/<flags>\", where <flags> can be empty or a combination of standard JavaScript RegExp flags (g, i, m, s, u, or y). For example, \"/^(Billing).+/\", \"/\\\\s*[\\\\w\\\\.]+\\\\s*/gs\". Only 1 regular expression exclude can be specified.",
          "minItems": 0,
          "items": {
            "type": "string"
          }
        },
        "variableType": {
          "$ref": "#/definitions/variableType",
          "description": "Specifies variable type and optional constraints. Defaults to type string."
        },
        "defaultValue": {
          "description": "Default value for the variable, if the user does not set the value in the wizard. Set to the most likely value to use.",
          "$comment": "The type of defaultValue depends upon variablesType.type"
        }
      }
    }
  },
  "definitions": {
    "variableType": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Variable type.",
          "enum": [
            "ArrayType",
            "BooleanType",
            "ConnectorType",
            "CalculatedInsightType",
            "CalculatedInsightFieldType",
            "DataLakeObjectType",
            "DataLakeObjectFieldType",
            "DataModelObjectType",
            "DataModelObjectFieldType",
            "DatasetAnyFieldType",
            "DatasetDateType",
            "DatasetDimensionType",
            "DatasetMeasureType",
            "DatasetType",
            "DateTimeType",
            "NumberType",
            "ObjectType",
            "SobjectType",
            "SobjectFieldType",
            "StringType"
          ],
          "enumDescriptions": [
            "References a list of values, controlled by the `itemsType` variable type.",
            "References true or false value.",
            "References connectors defined in the org.",
            "References calculated insights defined in the org. Only available in Summer '23 release.",
            "References calculated insight fields in the org. Only available in Summer '23 release.",
            "References data lake objects in the org. Only available in Summer '23 release.",
            "References data lake object fields in the org. Only available in Summer '23 release.",
            "References data model objects in the org. Only available in Summer '23 release.",
            "References data model object fields in the org. Only available in Summer '23 release.",
            "References fields from datasets in the org.",
            "References date fields from datasets in the org.",
            "References dimensions from dataset in the org.",
            "References measures from dataset in the org.",
            "References datasets in the org.",
            "References date and time values.",
            "References numeric values.",
            "References user-defined object values.",
            "References sObjects in the org.",
            "References fields from sObejcts in the org.",
            "References string values."
          ]
        },
        "enums": {
          "doNotSuggest": true
        },
        "enumsLabels": {
          "doNotSuggest": true
        },
        "min": {
          "doNotSuggest": true
        },
        "max": {
          "doNotSuggest": true
        },
        "dataType": {
          "doNotSuggest": true
        },
        "itemsType": {
          "doNotSuggest": true
        },
        "sizeLimit": {
          "doNotSuggest": true
        },
        "properties": {
          "doNotSuggest": true
        },
        "required": {
          "doNotSuggest": true
        },
        "strictValidation": {
          "doNotSuggest": true
        },
        "connectorType": {
          "doNotSuggest": true
        },
        "fieldType": {
          "doNotSuggest": true
        }
      },
      "defaultSnippets": [
        {
          "label": "New variableType",
          "body": {
            "type": "${1}"
          }
        }
      ],
      "$comment": "Customize some of the optional fields depending on the type.",
      "anyOf": [
        {
          "properties": {
            "type": {
              "const": "StringType"
            },
            "enums": {
              "type": "array",
              "minItems": 0,
              "description": "Possible string values.",
              "items": {
                "type": "string"
              },
              "doNotSuggest": false
            },
            "enumsLabels": {
              "type": ["array", "null"],
              "minItems": 0,
              "description": "The optional display labels for the enumerated values. Only available in Summer '23 release.",
              "items": {
                "type": ["string", "null"]
              },
              "doNotSuggest": true
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "const": "NumberType"
            },
            "min": {
              "type": ["number", "integer"],
              "description": "Minimum numeric value.",
              "doNotSuggest": false
            },
            "max": {
              "type": ["number", "integer"],
              "description": "Maximum numeric value.",
              "doNotSuggest": false
            },
            "enums": {
              "type": "array",
              "minItems": 0,
              "description": "Possible numeric values.",
              "items": {
                "type": ["number", "integer"]
              },
              "doNotSuggest": false
            },
            "enumsLabels": {
              "type": ["array", "null"],
              "minItems": 0,
              "description": "The optional display labels for the enumerated values. Only available in Summer '23 release.",
              "items": {
                "type": ["string", "null"]
              },
              "doNotSuggest": false
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "const": "SobjectFieldType"
            },
            "dataType": {
              "type": "string",
              "description": "Required data type of underlying sObject field.",
              "enum": [
                "tns:ID",
                "xsd:anyType",
                "xsd:base64Binary",
                "xsd:boolean",
                "xsd:date",
                "xsd:dateTime",
                "xsd:double",
                "xsd:int",
                "xsd:string",
                "xsd:time"
              ],
              "doNotSuggest": false
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "const": "CalculatedInsightFieldType"
            },
            "dataType": {
              "description": "Required data type of underlying calculated insight field.",
              "doNotSuggest": false,
              "anyOf": [
                {
                  "enum": ["string", "number", "date", "date_time"]
                },
                {
                  "type": ["null", "string"]
                }
              ]
            },
            "fieldType": {
              "description": "Limits to this type of calculated insight field.",
              "doNotSuggest": false,
              "anyOf": [
                {
                  "enum": ["dimension", "measure"]
                },
                {
                  "type": ["null", "string"]
                }
              ]
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "const": "DataLakeObjectFieldType"
            },
            "dataType": {
              "description": "Required data type of underlying data lake object field.",
              "doNotSuggest": false,
              "anyOf": [
                {
                  "enum": ["string", "number", "date", "date_time"]
                },
                {
                  "type": ["null", "string"]
                }
              ]
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "const": "DataModelObjectFieldType"
            },
            "dataType": {
              "description": "Required data type of underlying data model field.",
              "doNotSuggest": false,
              "anyOf": [
                {
                  "enum": ["string", "number", "date", "date_time"]
                },
                {
                  "type": ["null", "string"]
                }
              ]
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "const": "ArrayType"
            },
            "itemsType": {
              "$ref": "#/definitions/variableType",
              "description": "The type of each element of the array."
            },
            "sizeLimit": {
              "type": "object",
              "description": "Specifies optional minimum and maximum size of the array.",
              "additionalProperties": false,
              "properties": {
                "max": {
                  "type": ["number", "integer"],
                  "description": "Maximum size of the array."
                },
                "min": {
                  "type": ["number", "integer"],
                  "description": "Minimum size of the array."
                }
              },
              "doNotSuggest": false
            }
          },
          "required": ["type", "itemsType"]
        },
        {
          "properties": {
            "type": {
              "const": "ConnectorType"
            },
            "connectorType": {
              "description": "The type of connector to offer to the user. This will match on any connector type that starts with this value (e.g. \"Salesforce\" will match \"SalesforceCPQ\", \"SalesforceCommunityCloud\", etc.) Only used for ConnectorType variables.",
              "doNotSuggest": false,
              "anyOf": [
                {
                  "enum": [
                    "ActCRM",
                    "ActOn",
                    "AdobeAnalytics",
                    "AmazonAthena",
                    "AmazonDynamoDB",
                    "AmazonS3",
                    "AmazonS3Output",
                    "AwsMarketplace",
                    "AwsRdsAuroraMySQL",
                    "AwsRdsAuroraPostgres",
                    "AwsRdsMariaDB",
                    "AwsRdsMySQL",
                    "AwsRdsOracle",
                    "AwsRdsPostgres",
                    "AwsRdsSqlServer",
                    "AzureCosmosDB",
                    "AzureDataLakeGen2Output",
                    "AzureSqlDatabase",
                    "AzureSqlDatawarehouse",
                    "AzureTable",
                    "Box",
                    "Cassandra",
                    "CdpDirect",
                    "Dropbox",
                    "GoogleAds",
                    "GoogleAnalytics",
                    "GoogleAnalyticsCoreReporting",
                    "GoogleBigQuery",
                    "GoogleBigQueryDirect",
                    "GoogleBigQueryStandardSQL",
                    "GoogleCloudStorage",
                    "GoogleSheets",
                    "GoogleSpanner",
                    "HerokuPostgres",
                    "HubSpot",
                    "IbmCloudSqlQuery",
                    "LinkedIn",
                    "MarkLogic",
                    "Marketo",
                    "MarketoV2",
                    "MicrosoftAdvertising",
                    "MicrosoftDynamics",
                    "MongoDB",
                    "MulesoftAnaplan",
                    "MulesoftConcur",
                    "MulesoftHubSpot",
                    "MulesoftMarkLogic",
                    "MulesoftMongoDB",
                    "MulesoftMySQL",
                    "MulesoftOracle",
                    "MulesoftServiceNow",
                    "MulesoftSqlServer",
                    "MulesoftWorkday",
                    "MulesoftZuora",
                    "NetSuite",
                    "OracleEloqua",
                    "Redshift",
                    "SalesforceCPQ",
                    "SalesforceCommunityCloud",
                    "SalesforceEinsteinAnalytics",
                    "SalesforceExternal",
                    "SalesforceForceCom",
                    "SalesforceMarketingCloud",
                    "SalesforceMarketingCloudFull",
                    "SalesforceMarketingCloudOAuth2",
                    "SalesforceOutput",
                    "SalesforceReport",
                    "SalesforceSalesCloud",
                    "SalesforceServiceCloud",
                    "SapConcur",
                    "SapHana",
                    "SapHanaCloud",
                    "SapSuccessFactors",
                    "ServiceNow",
                    "SfdcLocal",
                    "SnowflakeComputing",
                    "SnowflakeDirect",
                    "SnowflakeOutput",
                    "SugarCRM",
                    "TableauHyperOutput",
                    "Teradata",
                    "VeevaVault",
                    "Xactly",
                    "Zendesk",
                    "ZohoCRM",
                    "ZuoraAQuA"
                  ]
                },
                {
                  "$comment": "Also allow any string since the value is used as a startsWith compare",
                  "type": ["null", "string"]
                }
              ],
              "defaultSnippets": [
                {
                  "label": "\"\"",
                  "body": "${0}"
                }
              ]
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "const": "ObjectType"
            },
            "properties": {
              "type": "object",
              "description": "A map of field name to variable type definition for the fields of this object. If unspecified or empty, the value and defaultValue can have any fields of any type.",
              "additionalProperties": {
                "$ref": "#/definitions/variableType"
              }
            },
            "required": {
              "type": "array",
              "description": "Property names required to have a value.",
              "minItems": 0,
              "items": {
                "type": "string"
              },
              "doNotSuggest": false
            },
            "strictValidation": {
              "type": "boolean",
              "description": "Specifies if this performs strict validation of fields values against property definitions. Defaults to false.",
              "default": false,
              "doNotSuggest": false
            }
          },
          "required": ["type"]
        },
        {
          "properties": {
            "type": {
              "not": {
                "enum": [
                  "StringType",
                  "NumberType",
                  "SobjectFieldType",
                  "CalculatedInsightFieldType",
                  "DataLakeObjectFieldType",
                  "DataModelObjectFieldType",
                  "ArrayType",
                  "ObjectType",
                  "ConnectorType"
                ]
              }
            }
          }
        }
      ]
    }
  }
}
